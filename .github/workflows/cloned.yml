name: Experiment

on:
  issue_comment:
    types:
      - created

jobs:

  setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && ( startsWith(github.event.comment.body, '/test') || startsWith(github.event.comment.body, '/build') ) }}
    outputs:
      action: ${{ steps.get-parsed-input.outputs.action }}
      build_options: ${{ steps.get-parsed-input.outputs.build_options }}
      head_ref: ${{ steps.comment-branch.outputs.head_ref }}
      base_ref: ${{ steps.comment-branch.outputs.base_ref }}
      head_sha: ${{ steps.comment-branch.outputs.head_sha }}
      issue_number: ${{ steps.get-pr-details.outputs.number }}
      flutter_version: ${{ steps.get-flutter-version.outputs.data }}
    steps: 
      - name: get pull request metadata
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
        
      - name: get PR details
        uses: 8BitJonny/gh-get-current-pr@2.1.3
        id: get-pr-details
        with:
          github-token: ${{ github.token }}
          sha: ${{ steps.comment-branch.outputs.head_sha }}

      - name: Parse command
        id: parse-input
        uses: syaiful-aa/actions-experiment/command-parser@v3.0.1
        # uses: ./github/actions/command-parser
        with:
          command: ${{ github.event.comment.body }}

      - name: Get job action and build options
        id: get-parsed-input
        run: | 
          echo "action=${{ toJson(steps.parse-input.outputs.action) }}" >> $GITHUB_OUTPUT
          echo "build_options=$(jq -r -c . <<< "${{ toJson(steps.parse-input.outputs.build_options) }}")" >> $GITHUB_OUTPUT

      - name: Get Flutter Version from pubspec.yaml
        id: get-flutter-version
        run: |
          flutter_version=$(cat ./pubspec.yaml | grep '  flutter:' | cut -d ':' -f2 | sed 's/ //')
          echo "data=$flutter_version" >> $GITHUB_OUTPUT
      - name: Job Completion
        if: failure()
        uses: syaiful-aa/actions-experiment/send-check-status@v3.2.0
        with:
          repository: ${{ github.repository }}
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          run_id: ${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          is_success: ${{ steps.get-flutter-version.outcome == 'success' }}
          notify_on_failure: true
          slack_webhook_url: 'fffffffff'
          app_version: '1.0.0'
          head_ref: ${{ needs.setup.outputs.head_ref }}
          base_ref: ${{ needs.setup.outputs.base_ref }}



  testing:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: setup branch
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup.outputs.head_ref }}

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          # flutter-version: ${{ needs.setup.outputs.flutter_version }}
          flutter-version: '3.3.8'
          cache: true

      - name: Analyze
        id: analyze
        run: |
          flutter analyze --write=analyze_output .

      - name: Combine analyze result
        id: combine-analyze-result
        if: failure() && steps.analyze.outcome == 'failure'
        shell: bash
        run: |
          for file in $(find . -type f -name "analyze_output")
          do if [ -s $file ]; then
              cat "$file" >> analyze_output_all 
              echo "" >> analyze_output_all
            fi
          done

          base_dir=$(pwd)
          sed -i "s|$base_dir||g" analyze_output_all

          delimiter="$(openssl rand -hex 8)"
          echo "result<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$(cat analyze_output_all)" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Create analyze result comment
        if: failure() && steps.analyze.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ needs.setup.outputs.issue_number }}
          body: |
            #Analyze Failed

            ```
            ${{ steps.combine-analyze-result.outputs.result }}
            ```

            for further detail you can check this action summary
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: test
        id: test
        run: |
          echo "action: ${{ needs.setup.outputs.action }}"
          
      - name: Job Completion
        if: always() && ( startsWith(github.event.comment.body, '/test') || ( startsWith(github.event.comment.body, '/build') && steps.test.outcome != 'success') )
        uses: syaiful-aa/actions-experiment/send-check-status@v3.2.0
        with:
          repository: ${{ github.repository }}
          sha: ${{ needs.setup.outputs.head_sha }}
          run_id: ${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          is_success: ${{ steps.test.outcome == 'success' }}
          notify_on_failure: true
          slack_webhook_url: 'fffffffff'
          app_version: '1.0.0'
          head_ref: ${{ needs.setup.outputs.head_ref }}
          base_ref: ${{ needs.setup.outputs.base_ref }}
      

  deploy:
    needs: [setup, testing]
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.action == '/build' && contains(needs.testing.result , 'success') }}
    strategy:
      matrix:
        build_options: ${{ fromJSON(needs.setup.outputs.build_options) }}
    env:
      artifact_type: ${{ matrix.build_options.artifact }}
      flavor: ${{ matrix.build_options.flavor }}
      build_mode: ${{ matrix.build_options.mode }}
      build_option: "${{ matrix.build_options.artifact }} --flavor ${{ matrix.build_options.flavor }} --${{ matrix.build_options.mode }}"
    steps:
      - name: build
        run: |
          echo "$artifact_type $flavor $build_mode"
          echo $build_option
      - name: Build Apk ${{ env.flavor }} --${{ env.build_mode }}
        if: ${{ env.artifact_type == 'apk'}}
        run: |
          echo "build $artifact_type $flavor $build_mode" >> "$artifact_type"
      - name: upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ env.artifact_type }} ${{ env.flavor }} ${{ env.build_mode }}"
          path: ${{ env.artifact_type }}
      - name: Job Completion
        if: always()
        uses: syaiful-aa/actions-experiment/send-check-status@v3.2.0
        with:
          repository: ${{ github.repository }}
          sha: ${{ needs.setup.outputs.head_sha }}
          run_id: ${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          is_success: ${{ steps.upload-artifact.outcome == 'success' }}
          notify_on_failure: true
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          app_version: '1.x.x'
          head_ref: ${{ needs.setup.outputs.head_ref }}
          base_ref: ${{ needs.setup.outputs.base_ref }}

          