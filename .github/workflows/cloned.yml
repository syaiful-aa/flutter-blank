name: Experiment

on:
  issue_comment:
    types:
      - created

jobs:

  setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && ( startsWith(github.event.comment.body, '/test') || startsWith(github.event.comment.body, '/build') ) }}
    outputs:
      action: ${{ steps.get-output.outputs.action }}
      build_options: ${{ steps.get-output.outputs.build_options }}
      head_ref: ${{ steps.comment-branch.outputs.head_ref }}
      base_ref: ${{ steps.comment-branch.outputs.base_ref }}
      head_sha: ${{ steps.comment-branch.outputs.head_sha }}
    steps: 
      - name: Parse command
        id: parse-input
        uses: syaiful-aa/actions-experiment/command-parser@v3.0.1
        # uses: ./github/actions/command-parser
        with:
          command: ${{ github.event.comment.body }}
      - name: Get job action and build options
        id: get-output
        run: | 
          echo "action=${{ toJson(steps.parse-input.outputs.action) }}" >> $GITHUB_OUTPUT
          echo "build_options=$(jq -r -c . <<< "${{ toJson(steps.parse-input.outputs.build_options) }}")" >> $GITHUB_OUTPUT
      - name: get pull request metadata
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

  testing:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: |
          echo "action: ${{ needs.setup.outputs.action }}"

  deploy:
    needs: [setup, testing]
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.action == '/build' && contains(needs.testing.result , 'success') }}
    strategy:
      matrix:
        build_options: ${{ fromJSON(needs.setup.outputs.build_options) }}
    env:
      artifact_type: ${{ matrix.build_options.artifact }}
      flavor: ${{ matrix.build_options.flavor }}
      build_mode: ${{ matrix.build_options.mode }}
      build_option: "${{ matrix.build_options.artifact }} --flavor ${{ matrix.build_options.flavor }} --${{ matrix.build_options.mode }}"
    steps:
      - name: build
        run: |
          echo "$artifact_type $flavor $build_mode"
          echo $build_option
      - name: Build Apk ${{ env.flavor }} --${{ env.build_mode }}
        if: ${{ env.artifact_type == 'apk'}}
        run: |
          echo "build $artifact_type $flavor $build_mode" >> "$artifact_type"
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
            name: "${{ env.artifact_type }} ${{ env.flavor }} ${{ env.build_mode }}"
            path: ${{ env.artifact_type }}
          
  job_completion:
    runs-on: ubuntu-latest
    needs: [setup, testing, deploy]
    if: ${{ always() && github.event.issue.pull_request && ( startsWith(github.event.comment.body, '/test') || startsWith(github.event.comment.body, '/build') )}}
    steps:
      - name: Check Completion
        run: |
          if ${{ startsWith(github.event.comment.body, '/test') && needs.testing.result == 'success'}}; then
            echo "masuk test"
            exit 0
          fi

          if ${{ startsWith(github.event.comment.body, '/build') && needs.testing.result == 'success' && needs.deploy.result == 'success' }}; then
            echo "masuk"
            exit 0
          fi

          echo "exit"
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ needs.testing.outputs.head_sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "deploy",
            "state": "failure",
            "description": "Deployment failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
          exit 1
      - name: Check post data
        run: |
          echo "repo: ${{ github.repository }}"
          echo "head_sha: ${{ needs.setup.outputs.head_sha }}"
          echo "run id: ${{ github.run_id }}"

      - name: check success
        run: |
          echo "success"

      - name: Mark as Completed
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ needs.setup.outputs.head_sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "deploy",
            "state": "success",
            "description": "Deployment Completed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'


