name: Experiment

on:
  issue_comment:
    types:
      - created
      
permissions:
  contents: read
  pull-requests: read

jobs:
  parsing:
    runs-on: ubuntu-latest
    outputs:
      flavors: ${{ steps.get-flavors.outputs.flavors }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Hello world action step
        id: hello
        uses: ./.github/actions/job-validation
        with:
          who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      - name: Get the flavors
        id: get-flavors
        run: | 
          echo "The time was ${{ steps.hello.outputs.time }}"
          echo "matrix=${{ steps.hello.outputs.flavors }}" >> $GITHUB_OUTPUT

  run-matrix:
    needs: parsing
    strategy:
      matrix:
        flavor: ${{ fromJson(needs.testing.outputs.flavors) }}
    steps:
      - name: buid
        run: echo ${{ matrix.flavor }}
          

   
  # job-validation:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.issue.pull_request && (startsWith(github.event.comment.body, '/build') || startsWith(github.event.comment.body, '/test')) }} 
  #   outputs:
  #     arguments: ${{ steps.check-command.outputs.arguments }}
  #     arguments2: ${{ steps.check-command.outputs.arguments2 }}
  #     command: ${{ steps.check-command.outputs.command }}
  #   steps:
  #     - name: Check command from input
  #       id: check-command
  #       run: |
  #         rawInput="${{ github.event.comment.body }}"
  #         input=${rawInput///""}

  #         IFS=" " read -ra inputSplitted <<< "$input"
  #         action=${inputSplitted[0]}
  #         options=${input/$action/""}

  #         echo $action
  #         echo "command=$action" >> "$GITHUB_OUTPUT"

  #         echo $options

  #         IFS="," read -ra optionsSplitted <<< "$options"
  #         for option in "${optionsSplitted[@]}"; do
  #           echo $option
  #         done

  #         JSON="[$(echo $optionsSplitted | sed 's/ /, /g')]"

  #         echo "arguments=$JSON" >> "$GITHUB_OUTPUT"
  #         echo "arguments2=$optionsSplitted" >> "$GITHUB_OUTPUT"

  #         echo "finish"


  #     - name: Check output
  #       id: check-output
  #       run: |
  #         echo "start"
  #         echo ${{ steps.check-command.outputs.command }}
  #         echo ${{ steps.check-command.outputs.arguments }}



